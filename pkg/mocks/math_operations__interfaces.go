// Code generated by mockery v2.14.0. DO NOT EDIT.

package servicemocks

import mock "github.com/stretchr/testify/mock"

// MathOperations is an autogenerated mock type for the MathOperations type
type MathOperations struct {
	mock.Mock
}

// DoMath provides a mock function with given fields: x, y, operationSign, result
func (_m *MathOperations) DoMath(x int64, y int64, operationSign string, result *int64) error {
	ret := _m.Called(x, y, operationSign, result)

	var r0 error
	if rf, ok := ret.Get(0).(func(int64, int64, string, *int64) error); ok {
		r0 = rf(x, y, operationSign, result)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewMathOperations interface {
	mock.TestingT
	Cleanup(func())
}

// NewMathOperations creates a new instance of MathOperations. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMathOperations(t mockConstructorTestingTNewMathOperations) *MathOperations {
	mock := &MathOperations{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
